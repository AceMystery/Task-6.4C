<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0807.1415                               -->
<workbook original-version='18.1' source-build='2018.1.4 (20181.18.0807.1415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (status-of-australian-fish-stocks-2016)' inline='true' name='federated.141vxwk0s5jyzw167e53f1ad6fwn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='status-of-australian-fish-stocks-2016' name='excel-direct.1m8sb9b13tic1614o9aoi1s9d05p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kingp/Downloads/status-of-australian-fish-stocks-2016.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1m8sb9b13tic1614o9aoi1s9d05p' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B8:no:A1:B8:0' header='yes' outcome='6'>
            <column datatype='string' name='Stock_by_Status' ordinal='0' />
            <column datatype='integer' name='2015_Catch_by_species_type_to_Stock_Status' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Stock_by_Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Stock_by_Status]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Stock_by_Status</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2015_Catch_by_species_type_to_Stock_Status</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2015_Catch_by_species_type_to_Stock_Status]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>2015_Catch_by_species_type_to_Stock_Status</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B8:no:A1:B8:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='2015 Catch by species type to Stock Status' datatype='integer' name='[2015_Catch_by_species_type_to_Stock_Status]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Stock by Status' datatype='string' name='[Stock_by_Status]' role='dimension' type='nominal' />
      <column-instance column='[Stock_by_Status]' derivation='None' name='[none:Stock_by_Status:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.482143' measure-ordering='alphabetic' measure-percentage='0.517857' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Stock_by_Status:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Environmentally limited&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Transitional-depleting&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Sustainable&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Underfined&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Overfished&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Transitional-recovering&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Negligible&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2015 Status of  Australian Fish stocks</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (status-of-australian-fish-stocks-2016)' name='federated.141vxwk0s5jyzw167e53f1ad6fwn' />
          </datasources>
          <datasource-dependencies datasource='federated.141vxwk0s5jyzw167e53f1ad6fwn'>
            <column caption='2015 Catch by species type to Stock Status' datatype='integer' name='[2015_Catch_by_species_type_to_Stock_Status]' role='measure' type='quantitative' />
            <column caption='Stock by Status' datatype='string' name='[Stock_by_Status]' role='dimension' type='nominal' />
            <column-instance column='[Stock_by_Status]' derivation='None' name='[none:Stock_by_Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[2015_Catch_by_species_type_to_Stock_Status]' derivation='Sum' name='[sum:2015_Catch_by_species_type_to_Stock_Status:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.141vxwk0s5jyzw167e53f1ad6fwn].[sum:2015_Catch_by_species_type_to_Stock_Status:qk]' scope='rows' value='Number of Stocks' />
            <encoding attr='space' class='0' field='[federated.141vxwk0s5jyzw167e53f1ad6fwn].[sum:2015_Catch_by_species_type_to_Stock_Status:qk]' field-type='quantitative' major-origin='0' major-spacing='10' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.141vxwk0s5jyzw167e53f1ad6fwn].[none:Stock_by_Status:nk]' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.141vxwk0s5jyzw167e53f1ad6fwn].[none:Stock_by_Status:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.141vxwk0s5jyzw167e53f1ad6fwn].[sum:2015_Catch_by_species_type_to_Stock_Status:qk]</rows>
        <cols>[federated.141vxwk0s5jyzw167e53f1ad6fwn].[none:Stock_by_Status:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.141vxwk0s5jyzw167e53f1ad6fwn].[none:Stock_by_Status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.141vxwk0s5jyzw167e53f1ad6fwn].[:Measure Names]</field>
            <field>[federated.141vxwk0s5jyzw167e53f1ad6fwn].[none:Stock_by_Status:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
